<template>
  <div>
    <el-row>
      <el-col :span="8">
        <div>
          <el-input
            prefix-icon="el-icon-search"
            placeholder="输入关键字进行过滤"
            v-model="filterText">
          </el-input>
          <el-tree :data="data"
                   :props="defaultProps"
                   node-key="id"
                   default-expand-all
                   :expand-on-click-node="false"
                   :render-content="renderContent"
                   :highlight-current="true"
                   :filter-node-method="filterNode"
                   ref="tree2"
                   @node-click="handleNodeClick"></el-tree>
        </div>
      </el-col>
      <el-col :span="16">
        <div>
          <el-form ref="form" :model="curMenu" :rules="rules" label-width="100px" class="demo-ruleForm">
            <el-form-item label="父级菜单">
              <el-input v-model="curMenu.parentName"></el-input>
            </el-form-item>
            <el-form-item label="菜单名称" prop="name">
              <el-input v-model="curMenu.name"></el-input>
            </el-form-item>
            <el-form-item label="URL地址" prop="url">
              <el-input v-model="curMenu.url"></el-input>
            </el-form-item>
            <el-form-item label="菜单排序">
              <el-input v-model="curMenu.index"></el-input>
            </el-form-item>
            <el-form-item label="所属权限域">
              <el-input v-model="curMenu.domain"></el-input>
            </el-form-item>
            <el-form-item label="所属模块">
              <el-input v-model="curMenu.module"></el-input>
            </el-form-item>
            <el-form-item label="是否启用" prop="delivery">
              <el-switch v-model="curMenu.status"></el-switch>
            </el-form-item>
            <el-form-item label="备注">
              <el-input type="textarea" v-model="curMenu.remarks"></el-input>
            </el-form-item>
            <el-form-item>
              <el-button type="primary" @click="submitForm('form')">提交</el-button>
            </el-form-item>
          </el-form>
        </div>
      </el-col>
    </el-row>
  </div>
</template>

<script>

  export default {
    data() {
      return {
        filterText:"",
        curMenu:{
          id:"",
          parentId:"",
          parentName:"",
          code:"",
          name:"",
          index:"",
          status: true
        },
        data: [{
          id:"1",
          label: '一级 1',
          children: [{
            id:"1-1",
            label: '二级 1-1',
            children: [{
              id:"1-1-1",
              label: '三级 1-1-1'
            },{
              id:"1-1-2",
              label: '三级 1-1-2'
            },{
              id:"1-1-3",
              label: '三级 1-1-3'
            },{
              id:"1-1-4",
              label: '三级 1-1-4'
            }]
          }]
        }, {
          id:"2",
          label: '一级 2',
          children: [{
            id:"2-1",
            label: '二级 2-1',
            children: [{
              label: '三级 2-1-1'
            }]
          }, {
            label: '二级 2-2',
            children: [{
              label: '三级 2-2-1'
            }]
          }]
        }, {
          label: '一级 3',
          children: [{
            label: '二级 3-1',
            children: [{
              label: '三级 3-1-1'
            }]
          }, {
            id:"3-2",
            label: '二级 3-2',
            children: [{
              label: '三级 3-2-1'
            }]
          }]
        }],
        defaultProps: {
          children: 'children',
          label: 'label'
        },
        rules: {
          name: [
            { required: true, message: '请输入菜单名称', trigger: 'blur' },
            { min: 3, max: 100, message: '长度在 3 到 100 个字符', trigger: 'blur' }
          ],
          url: [
            { required: true, message: '请输入URL地址', trigger: 'blur' },
            { min: 3, max: 100, message: '长度在 3 到 100 个字符', trigger: 'blur' }
          ]
        }
      };
    },
    watch: {
      filterText(val) {
##        this.$refs.tree2.filter(val);
      }
    },
    methods: {
      filterNode(value, data) {
        if (!value) return true;
        return data.label.indexOf(value) !== -1;
      },
      handleNodeClick(data, checked, indeterminate){

        this.curMenu.parentId = checked.parent.data.id;
        this.curMenu.parentName = checked.parent.data.label;
        this.curMenu.name = checked.data.label;

        var preNode, nextNode;
        for(var i=0; i<checked.parent.childNodes.length; i++){
          var element = checked.parent.childNodes[i];
          if(data.id == element.data.id){
            if(i != 0){
              preNode = checked.parent.childNodes[i-1];
            }
            if(i != checked.parent.childNodes.length){
              nextNode = checked.parent.childNodes[i+1];
            }
            break;
          }
        }
        console.log(preNode, nextNode);
      },
      append(data) {
        const newChild = { id: id++, label: 'testtest', children: [] };
        if (!data.children) {
          this.$set(data, 'children', []);
        }
        data.children.push(newChild);
      },

      remove(node, data) {
        const parent = node.parent;
        const children = parent.data.children || parent.data;
        const index = children.findIndex(d => d.id === data.id);
        children.splice(index, 1);
      },
      renderContent(h, { node, data, store }) {
        return (
          h("span", node.label)
          /*<span style="flex: 1; display: flex; align-items: center; justify-content: space-between; font-size: 14px; padding-right: 8px;">
            <span>
              <span>{node.label}</span>
            </span>
            <span>
              <el-button style="font-size: 12px;" type="text" on-click={ () => this.append(data) }>Append</el-button>
              <el-button style="font-size: 12px;" type="text" on-click={ () => this.remove(node, data) }>Delete</el-button>
            </span>
          </span>*/
        );
      },
      submitForm(formName) {
##        this.$refs[formName].validate((valid) => {
##          if (valid) {
##            alert('submit!');
##          } else {
##            console.log('error submit!!');
##            return false;
##          }
##        });
      },
    }
  };
</script>
